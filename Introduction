
    Node.js is a JavaScript runtime, an environment that allows us to execute our JavaScript code by converting it into something a computer can understand.
    REPLs are processes that read, evaluate, print, and repeat (loop), and Node.js comes with its own REPL we can access in our terminal with the node command.
    We run JavaScript programs with Node in the terminal by typing node followed by the file name (if weâ€™re in the same directory) or the absolute path of the file.
    Code can be organized into separate files, modules, and combined through requiring them where needed using the require() function.
    Core modules are built into the Node.js environment to efficiently perform common tasks.
    The console module exports a global console object allowing the terminal to act as a debugging console, similar to the JavaScript console object provided by web browsers.
    The process module is a global module that gives access to information about the Node.js runtime environment.
    The os module provides methods to retrieve information about the computer, operating system, and network interfaces.
    The util module contains methods used to maintain and debug your code.
    
    

    Use console.count() to log how many times a function is called.
    Use process.emitWarning() to create and log a custom warning message to the terminal.
    Use os.freemem() to check how much free system memory is available in the learning environment.
    Use util.format() to log a formatted object to the terminal.

